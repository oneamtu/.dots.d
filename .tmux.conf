unbind C-b
set -g prefix C-a

set -g history-limit 20000

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

#Highlight active window
set-window-option -g window-status-current-bg red

# vim-like bindings
unbind-key %
bind s split-window -v
bind v split-window -h

# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 1
bind > resize-pane -R 1
bind - resize-pane -D 1
bind + resize-pane -U 1

# copy & paste between tmux and x clipboard
bind C-p run-shell "tmux set-buffer \"$(DISPLAY=:0 xclip -o)\"; tmux paste-buffer"
bind C-y run-shell "tmux show-buffer | DISPLAY=:0 xclip -sel clip -i"

# vi-style controls for copy mode
setw -g mode-keys vi

# default session
# new -d
# split-window -d
